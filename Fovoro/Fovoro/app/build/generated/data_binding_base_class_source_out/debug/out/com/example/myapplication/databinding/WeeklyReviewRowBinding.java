// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class WeeklyReviewRowBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView descriptionView;

  @NonNull
  public final ImageButton like;

  @NonNull
  public final TextView likecount;

  @NonNull
  public final ImageView recyclerimg;

  @NonNull
  public final TextView titleView;

  private WeeklyReviewRowBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView descriptionView, @NonNull ImageButton like, @NonNull TextView likecount,
      @NonNull ImageView recyclerimg, @NonNull TextView titleView) {
    this.rootView = rootView;
    this.descriptionView = descriptionView;
    this.like = like;
    this.likecount = likecount;
    this.recyclerimg = recyclerimg;
    this.titleView = titleView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static WeeklyReviewRowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static WeeklyReviewRowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.weekly_review_row, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static WeeklyReviewRowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.descriptionView;
      TextView descriptionView = ViewBindings.findChildViewById(rootView, id);
      if (descriptionView == null) {
        break missingId;
      }

      id = R.id.like;
      ImageButton like = ViewBindings.findChildViewById(rootView, id);
      if (like == null) {
        break missingId;
      }

      id = R.id.likecount;
      TextView likecount = ViewBindings.findChildViewById(rootView, id);
      if (likecount == null) {
        break missingId;
      }

      id = R.id.recyclerimg;
      ImageView recyclerimg = ViewBindings.findChildViewById(rootView, id);
      if (recyclerimg == null) {
        break missingId;
      }

      id = R.id.titleView;
      TextView titleView = ViewBindings.findChildViewById(rootView, id);
      if (titleView == null) {
        break missingId;
      }

      return new WeeklyReviewRowBinding((ConstraintLayout) rootView, descriptionView, like,
          likecount, recyclerimg, titleView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
