// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnMain1;

  @NonNull
  public final Button btnMain2;

  @NonNull
  public final Button btnMain3;

  @NonNull
  public final Button btnMain4;

  @NonNull
  public final ImageView ivHead;

  private LayoutMainBinding(@NonNull LinearLayout rootView, @NonNull Button btnMain1,
      @NonNull Button btnMain2, @NonNull Button btnMain3, @NonNull Button btnMain4,
      @NonNull ImageView ivHead) {
    this.rootView = rootView;
    this.btnMain1 = btnMain1;
    this.btnMain2 = btnMain2;
    this.btnMain3 = btnMain3;
    this.btnMain4 = btnMain4;
    this.ivHead = ivHead;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_main_1;
      Button btnMain1 = ViewBindings.findChildViewById(rootView, id);
      if (btnMain1 == null) {
        break missingId;
      }

      id = R.id.btn_main_2;
      Button btnMain2 = ViewBindings.findChildViewById(rootView, id);
      if (btnMain2 == null) {
        break missingId;
      }

      id = R.id.btn_main_3;
      Button btnMain3 = ViewBindings.findChildViewById(rootView, id);
      if (btnMain3 == null) {
        break missingId;
      }

      id = R.id.btn_main_4;
      Button btnMain4 = ViewBindings.findChildViewById(rootView, id);
      if (btnMain4 == null) {
        break missingId;
      }

      id = R.id.iv_head;
      ImageView ivHead = ViewBindings.findChildViewById(rootView, id);
      if (ivHead == null) {
        break missingId;
      }

      return new LayoutMainBinding((LinearLayout) rootView, btnMain1, btnMain2, btnMain3, btnMain4,
          ivHead);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
